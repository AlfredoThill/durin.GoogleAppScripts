{"files":[{"id":"950e25b0-22c9-4176-8bb3-2b44cd6b2854","name":"iterador","type":"server_js","source":"var sapp,ss,dapp,rev,mpp,sheet,params,results,results_sheet,properties,continuationToken,headers,title;\n    dapp \u003d DriveApp;\n    sapp \u003d SpreadsheetApp;\n    ss \u003d sapp.getActiveSpreadsheet();\n    sheet \u003d ss.getSheetByName(\u0027Operaciones\u0027);\n    params \u003d sheet.getRange(\u0027C3:E3\u0027).getValues();\n    oferta \u003d \u0027DISTANCIA\u0027;\n    folderId \u003d \u0027folderID\u0027;\n    ope \u003d params[0][0];\n    results \u003d [];\n    results_sheet \u003d ss.getSheetByName(\u0027Resultados\u0027);\n    properties \u003d PropertiesService.getUserProperties(); //Lo uso para guardar variables globales\n    continuationToken \u003d properties.getProperty(\u0027CONTINUATION_TOKEN\u0027);       \nvar date \u003d Utilities.formatDate(new Date(), SpreadsheetApp.getActive().getSpreadsheetTimeZone(), \"dd/MM/yyyy HH:mm:ss\");\nvar start_time,runtime,safe_runtime; \n    start_time \u003d new Date();\n    runtime \u003d 0;\n    safe_runtime \u003d 150; //2.5 minuticos\nvar checkToken,button1,button2;   \n  \nfunction startFI() {  \n  var template \u003d HtmlService.createTemplateFromFile(\u0027sideBar\u0027).getRawContent();\n  var contToken \u003d PropertiesService.getUserProperties().getProperty(\u0027CONTINUATION_TOKEN\u0027);\n  if (contToken \u003d\u003d\u003d null) {checkToken \u003d \u0027\u0027; button1 \u003d \u0027Ejecutar\u0027; button2 \u003d \u0027\u0027}\n  else {checkToken \u003d \u0027Operación anterior incompleta, token pendiente.\u0027; button1 \u003d \u0027Continuar\u0027; button2 \u003d \u0027\u003cbutton id\u003d\"Botón\" type\u003d\"reset\" class\u003d\"green\" onclick\u003d\"reset()\"\u003eReset\u003c/button\u003e\u0027}  \n  var ui \u003d HtmlService.createHtmlOutput(template.replace(\"{disp}\",checkToken).replace(\"{main_button}\",button1).replace(\"{reset_button}\",button2)).setTitle(\u0027Operador\u0027);\n  sapp.getUi().showSidebar(ui);\n};\n\n//-------------------------------------------------------------------ITERADOR DE ARCHIVOS, INICIO-------------------------------------------------------------------\n   \nfunction fileIterator(continuationToken){\n\n  if(continuationToken \u003d\u003d\u003d undefined){ //Primer Batch\n    var files \u003d dapp.getFolderById(folderId).getFiles();\n    properties.setProperty(\u0027Counter\u0027, 0); //defino como variable global un contador\n    properties.setProperty(\u0027ERROR_COUNTER\u0027, 0); //contador de errores\n     switch (ope){ //acciones previas a la operacion\n      case \u00271 -\u0027: //Cerrar\n       headers \u003d [\u0027Nombre\u0027,\u0027URL\u0027,\u0027Cerrada \"ESTUDIANTES\" y Abierta \"Fuera de cambios\"\u0027];break;\n      case \u00272 -\u0027: //Abrir\n       headers \u003d [\u0027Nombre\u0027,\u0027URL\u0027,\u0027Abierta \"ESTUDIANTES\" y Cerrada \"Fuera de cambios\"\u0027];break;\n      case \u00273 -\u0027: //Cambios\n       headers \u003d [\u0027Nombre\u0027,\u0027URL\u0027,\u0027Incluida en \"Informe fuera de cambios\"\u0027]; generarPlanillaInformeDeCambios();break;\n      case \u00274 -\u0027: //CSVs moodle\n       headers \u003d [\u0027Nombre\u0027,\u0027URL\u0027,\u0027CSV generado\u0027]; generarPlanillaMoodleCSV(); vaciarCarpetaCSV();break;\n      case \u00275 -\u0027: //Cruce Drive Vs Moodle\n       headers \u003d [\u0027Nombre\u0027,\u0027URL\u0027,\u0027Referencia generada\u0027]; generarPlanillaReferenciaCruce(); showPicker();\n     }\n     results_sheet.clearContents(); results.push(headers);\n  } \n  else{ //Batchs siguientes\n    var files \u003d dapp.continueFileIterator(continuationToken);\n     switch (ope){ //acciones previas a cada batch subsiguiente\n      case \u00273 -\u0027: //Cambios\n      abrirPlanillaInformeDeCambios();break;\n      case \u00274 -\u0027: //CSVs moodle\n      abrirPlanillaMoodleCSV();break;\n      case \u00275 -\u0027: //Cruce Drive Vs Moodle\n      abrirPlanillaReferenciaCruce();\n     }\n  }\n  \n var it \u003d 0;\n  while (files.hasNext()){\n    var file \u003d files.next(); \n//----------------la comida va aqui----------------\n  switch (ope){\n     case \u00271 -\u0027: //Cerrar\n      results.push(cerrarPlanillas(file));break;\n     case \u00272 -\u0027: //Abrir\n      results.push(abrirPlanillas(file));break;\n     case \u00273 -\u0027: //Cambios\n      results.push(informeDeCambios(file));break;\n     case \u00274 -\u0027: //CSVs moodle\n      results.push(moodleCSV(file));break;\n     case \u00275 -\u0027: //Cruce Drive Vs Moodle \n      results.push(generarReferenciaCruce(file));\n    }  \n//-----------------------------------------------\n    runtime \u003d ((new Date()) - start_time)/1000;\n    it++;   \n    if(runtime \u003e safe_runtime){\n     if(files.hasNext()){ //Si hay mas archivos, genera token para el proximo bacth\n       continuationToken \u003d files.getContinuationToken();\n       PropertiesService.getUserProperties().setProperty(\u0027CONTINUATION_TOKEN\u0027, continuationToken);\n       PropertiesService.getUserProperties().setProperty(\u0027Counter\u0027, parseInt((PropertiesService.getUserProperties().getProperty(\u0027Counter\u0027))) + parseInt(it)); //sumo el contador\n       var last \u003d results_sheet.getLastRow();\n       results_sheet.getRange(parseInt(last) + 1, 1, results.length, results[0].length).setValues(results);\n       return continuationToken;\n     } \n    }\n  } //FIN DEL WHILE\n  if (files.hasNext() \u003d\u003d false) {  //Si NO hay mas archivos, condicional redundante (si llego aca no habia mas archivos)\n    switch (ope){ //para operaciones adicionales posteriores a la iteracion sobre la carpeta\n      case \u00275 -\u0027: continuationToken \u003d \u0027OPERACION_ADICIONAL\u0027;break;\n      default:    continuationToken \u003d undefined; \n      }\n    PropertiesService.getUserProperties().deleteProperty(\u0027CONTINUATION_TOKEN\u0027);  \n    PropertiesService.getUserProperties().setProperty(\u0027Counter\u0027, parseInt((PropertiesService.getUserProperties().getProperty(\u0027Counter\u0027))) + parseInt(it)); //sumo el contador\n    var last \u003d results_sheet.getLastRow();\n    results_sheet.getRange(parseInt(last) + 1, 1, results.length, results[0].length).setValues(results);\n    sheet.getRange(parseInt(params[0][2]), 6).setValue(new Date());\n    sheet.getRange(parseInt(params[0][2]), 8).setValue(parseInt(PropertiesService.getUserProperties().getProperty(\u0027ERROR_COUNTER\u0027)));\n    return continuationToken;\n  }     \n};\n//-------------------------------------------------------------------ITERADOR DE ARCHIVOS, FIN-------------------------------------------------------------------\n\n//----------------------------------------------FUNCIONES AUXILIARES----------------------------------------------\n\nfunction writeSomething() { return properties.getProperty(\u0027Counter\u0027);} \n\nfunction hard_reset() { \n PropertiesService.getUserProperties().deleteProperty(\u0027CONTINUATION_TOKEN\u0027);\n PropertiesService.getUserProperties().deleteProperty(\u0027Counter\u0027);\n PropertiesService.getUserProperties().deleteProperty(\u0027GLOBAL_AUX\u0027);\n PropertiesService.getUserProperties().deleteProperty(\u0027ERROR_COUNTER\u0027);\n results_sheet.clearContents();\n}\n\nfunction reset_token() { \n PropertiesService.getUserProperties().deleteProperty(\u0027CONTINUATION_TOKEN\u0027);\n}"},{"id":"f20c5bc2-81fc-4af7-9380-202a74c35617","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Argentina/Buenos_Aires\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\"\n}"},{"id":"48d813d5-f031-413d-a93a-c80c80be1d4c","name":"sidebar","type":"html","source":"\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n  \u003chead\u003e\n    \u003cbase target\u003d\"_top\"\u003e\n  \u003c/head\u003e\n\u003cbody\u003e\n  \n  \u003clink rel\u003d\"stylesheet\" href\u003d\"https://ssl.gstatic.com/docs/script/css/add-ons.css\"\u003e\n    \n  \u003cdiv style\u003d\"text-align:center; margin-top:10px\"\u003e\n\n  \u003cdiv\u003eArchivos procesados:\u003c/div\u003e\n\n  \u003cdiv id\u003d\"cant\"\u003e0\u003c/div\u003e\n  \n\u003cbr\u003e\n\n  \u003cbutton id\u003d\"Botón\" class\u003d\"blue\" onclick\u003d\"ejecutar()\"\u003e{main_button}\u003c/button\u003e\n\n\u003cdiv id\u003d\"par1\" class\u003d\"secondary\"\u003eEsperando ejecución. Cerrar la ventana para detener el Script.\u003c/div\u003e\n\n\u003cbr\u003e\n\n  \u003cdiv id\u003d\"div\"\u003e{disp}\u003c/div\u003e\n  \n  {reset_button}\n\n\u003c/div\u003e\n\n\u003cscript\u003e\n  function ejecutar() {\n    document.getElementById(\"Botón\").disabled \u003d true;\n    document.getElementById(\"par1\").innerHTML\u003d\"Ejecución en curso. Cerrar la ventana para detener el Script.\"; \n    google.script.run\n     .withSuccessHandler(onSuccess)\n     .withFailureHandler(onFailure)\n     .fileIterator();\n  }\n  function reset() {\n    google.script.run\n                 .withSuccessHandler(function (){google.script.run.startFI()})\n                 .hard_reset();\n  }\n//Verifco el valor del token\n  function onSuccess(continuationToken){\n    if(continuationToken \u003d\u003d\u003d undefined){ //token esta indefinido, termina operacion\n      google.script.run.withSuccessHandler(callbackCounter).writeSomething();\n      document.getElementById(\"par1\").innerHTML\u003d\"Finalizó la operación solicitada.\"; \n    }\n    else if (continuationToken \u003d\u003d\u003d \u0027OPERACION_ADICIONAL\u0027){ //para operaciones adicionales, sólo para Cruce mdl por ahora\n      google.script.run.withSuccessHandler(callbackCounter).writeSomething();\n      document.getElementById(\"par1\").innerHTML\u003d\"Finalizó la iteración sobre las planillas. Ejecutando operación adicional.\";\n      google.script.run\n                   .withSuccessHandler(function (){document.getElementById(\"par1\").innerHTML\u003d\"Finalizó la operación solicitada.\";google.script.run.reset_token})\n                   .withFailureHandler(onFailure)\n                   .cruceDriveMdl();\n    }\n    else { //token no esta indefinido, sigue operacion\n      google.script.run.withSuccessHandler(callbackCounter).writeSomething();\n      google.script.run\n                   .withSuccessHandler(onSuccess)\n                   .withFailureHandler(onFailure)\n                   .fileIterator(continuationToken);\n    }\n  }\n  function onFailure(error){\n     document.getElementById(\"par1\").innerHTML\u003d \u0027\u0027;\n     document.getElementById(\"div\").innerHTML\u003d error;\n  }\n//Vuelco el contador  \nfunction callbackCounter(whatToWrite) {\n  document.getElementById(\"cant\").innerHTML\u003dwhatToWrite;\n}\n\u003c/script\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n"},{"id":"e5bf8cb5-c98f-4cc1-a371-3db5887e2b80","name":"cerrarPlanillas","type":"server_js","source":"function cerrarPlanillas(file){ \ntry {\n    var fileId \u003d file.getId();\n    var open \u003d SpreadsheetApp.openById(fileId);\n// CIERRO PLANILLA DE ESTUDIANTES:\n    var estudiantes \u003d open.getSheetByName(\u0027ESTUDIANTES\u0027);\n       \n         estudiantes.protect().remove();\n          var estudiantesProtection \u003d estudiantes.protect().setDescription(\u0027Planilla cerrada\u0027);\n          \n             var me \u003d Session.getEffectiveUser();\n              estudiantesProtection.addEditor(me);\n              estudiantesProtection.addEditor(\u0027modalidadadistancia.adultos@gmail.com\u0027);\n                 var editors \u003d estudiantesProtection.getEditors();\n                  for(var e in editors){\n                    if(editors[e].getEmail() !\u003d \u0027modalidadadistancia.adultos@gmail.com\u0027){\n                      estudiantesProtection.removeEditor(editors[e]);\n                    }\n                  }\n                if (estudiantesProtection.canDomainEdit()){\n                 estudiantesProtection.setDomainEdit(false);\n                }\n                \n// ABRO PLANILLA DE \"CAMBIOS FUERA DE PLAZO\":\n       var cambios \u003d open.getSheetByName(\u0027Cambios fuera de plazo\u0027);\n       \n         var cambiosProtection \u003d cambios.protect().setDescription(\u0027Planilla abierta\u0027);\n           var rangeDatos \u003d cambios.getRange(\u0027E5:AW55\u0027);\n          \n           var unprotected \u003d cambiosProtection.getUnprotectedRanges();\n             unprotected.push(rangeDatos);\n             cambiosProtection.setUnprotectedRanges(unprotected);\n             \n             var me \u003d Session.getEffectiveUser();\n              cambiosProtection.addEditor(me);\n               cambiosProtection.removeEditors(cambiosProtection.getEditors());\n                if (cambiosProtection.canDomainEdit()){\n                 cambiosProtection.setDomainEdit(false);\n                }\n     var results_row \u003d [open.getName(),open.getUrl(),\u0027Done\u0027];\n     return results_row            \n     }\ncatch (e) {\n     var results_row \u003d [open.getName(),open.getUrl(),e.message];\n     PropertiesService.getUserProperties().setProperty(\u0027ERROR_COUNTER\u0027, parseInt(PropertiesService.getUserProperties().getProperty(\u0027ERROR_COUNTER\u0027)) + 1)\n     return results_row\n     }\n}     "},{"id":"e7251cf7-42f3-49ad-a1b2-cfbb1f95a119","name":"abrirPlanillas","type":"server_js","source":"function abrirPlanillas(file){\ntry {\n    var fileId \u003d file.getId();\n    var open \u003d SpreadsheetApp.openById(fileId);  \n// CIERRO PLANILLA DE \"CAMBIOS FUERA DE PLAZO\": \n       var cambios \u003d open.getSheetByName(\u0027Cambios fuera de plazo\u0027);\n        \n        var destinationsheet \u003d cambios;\n        var remove_protection \u003d destinationsheet.protect().remove();\n        var destination_protection \u003d destinationsheet.protect();\n         destination_protection.setDescription(\u0027Planilla Cerrada\u0027);\n        var removeeditor \u003d destination_protection.removeEditors(destination_protection.getEditors());\n                \n// ABRO PLANILLA DE ESTUDIANTES: \n    var estudiantes \u003d open.getSheetByName(\u0027ESTUDIANTES\u0027);    \n       \n        var destinationsheet \u003d estudiantes;\n        var ranges_to_unprotect \u003d destinationsheet.getRangeList([\u0027B7\u0027,\u0027B9\u0027,\u0027B11\u0027,\u0027B13\u0027,\u0027B17\u0027,\u0027E6:AV500\u0027]).getRanges();\n        var destination_protection \u003d destinationsheet.protect();\n        destination_protection.setDescription(\u0027Planilla Abierta\u0027);\n        var removeeditor \u003d destination_protection.removeEditors(destination_protection.getEditors());\n        var update_protection \u003d destination_protection.setUnprotectedRanges(ranges_to_unprotect);\n       \n     var results_row \u003d [open.getName(),open.getUrl(),\u0027Done\u0027];\n     return results_row             \n     }\ncatch (e) {\n     var results_row \u003d [open.getName(),open.getUrl(),e.message];\n     PropertiesService.getUserProperties().setProperty(\u0027ERROR_COUNTER\u0027, parseInt(PropertiesService.getUserProperties().getProperty(\u0027ERROR_COUNTER\u0027)) + 1)\n     return results_row\n     }\n}\n"},{"id":"e1ee0d14-1099-43aa-870f-f6c457a51557","name":"informeCambios","type":"server_js","source":"var openInforme,modulosSheet,informeSheet;\n\nfunction informeDeCambios(file){\n//-------------------------------RUTINA PRINCIPAL-------------------------------\ntry {\n    var fileId \u003d file.getId();\n    var open \u003d SpreadsheetApp.openById(fileId);\n//SETTINGS:\nvar estSheet,estValues;\n    estSheet \u003d open.getSheetByName(\u0027ESTUDIANTES\u0027);\n    estValues \u003d estSheet.getRange(\u0027G6:G\u0027).getValues();  \nvar camSheet, camValues;\n    camSheet \u003d open.getSheetByName(\u0027Cambios fuera de plazo\u0027);\n    camValues \u003d camSheet.getRange(\u0027A5:AW55\u0027).getValues();\nvar cant \u003d camSheet.getRange(\u0027B2\u0027).getValue();\nvar headers \u003d camSheet.getRange(\u0027A3:AW3\u0027).getValues();\nvar sec \u003d open.getSheetByName(\u0027ESTUDIANTES\u0027).getRange(\u0027B15\u0027).getValue();   \n\n  var estC \u003d [];  // Array de filas con Cambios.\n  var rows \u003d [];  // Indices para borrar filas con cambios.\n  var infoPersonal \u003d []; // Informe.\n  var infoModulos \u003d [];  // Cambios en los módulos (Bajas e Inicios).\n\n        if(cant \u003e 0){\n          cambios(estC,rows,camValues); // 1. Genero Array con cambios.\n        }\n        if(estC.length \u003e 0){ // Si hay cambios...\n          informePersonal(estC,campModules,sec,infoPersonal,infoModulos); // 2. Genero informes.\n          modEstudiantes(estC,rows,estValues,estSheet,camSheet,open); // 3. Borro las planillas y aplico cambios.\n        }\n     var results_row \u003d [open.getName(),open.getUrl(),\u0027Done\u0027];\n     return results_row   \n     }\ncatch (e){\n     var results_row \u003d [open.getName(),open.getUrl(),e.message];\n     PropertiesService.getUserProperties().setProperty(\u0027ERROR_COUNTER\u0027, parseInt(PropertiesService.getUserProperties().getProperty(\u0027ERROR_COUNTER\u0027)) + 1)\n     return results_row\n     }\n}\n\n//-------------------------------FUNCIONES AUXILIARES-------------------------------\n\n//1 - GENERO ARRAY DE CAMBIOS.\nfunction cambios(estC,rows, camValues){  // Genero Array con cambios y Genero Array con índices.\n  for(var i in camValues){\n    var filaCambio \u003d camValues[i];  // Fila de cambios.\n    if(filaCambio[1] \u003e 0){  // Si realizaron algún cambio.\n      estC.push(filaCambio);  // Armo el array con filas con cambios.\n      rows.push(+i+5);\n    }\n  }\n  return estC,rows;\n};\n\n//2 - GENERO INFORMES DE CAMBIOS DE INFO. PERSONAL Y MÓDULOS.\nfunction informePersonal(estC,campModules,sec,infoPersonal,infoModulos){\n  for(var i in estC){  // Itero sobre el array con Cambios. Los reparto en distintos informes (Virtual o Módulos)\n    var cambio \u003d estC[i];  // Fila de Cambios.\n      if(cambio[0] \u003d\u003d \u0027VIRTUAL\u0027){ // Genero informe si son de VIRTUAL.\n        if(cambio[5] !\u003d \u0027\u0027 || cambio[6] !\u003d \u0027\u0027 || cambio[7] !\u003d \u0027\u0027 || cambio[10] !\u003d \u0027\u0027 || cambio[16] !\u003d \u0027\u0027){\n          infoPersonal.push([date,sec,cambio[4],cambio[5],cambio[6],cambio[7],cambio[10], cambio[16]]);\n        }\n       for(var x\u003d17;x\u003ccambio.length;x++){\n         var modulo \u003d campModules[x-17] + \u0027 - S\u0027+sec;  // Reemplazo por nombre de campus y concateno sección.\n           if(cambio[x] !\u003d \u0027\u0027 \u0026\u0026 cambio[x] !\u003d \u0027BAJA\u0027 \u0026\u0026 cambio[x][0] !\u003d \u0027A\u0027){  // Si es un inicio.\n            infoModulos.push([date, sec, cambio[4], \u0027INICIO\u0027,cambio[x], modulo]);\n           } else if(cambio[x] \u003d\u003d \u0027BAJA\u0027){  // Si es Baja.\n              infoModulos.push([date, sec, cambio[4], \u0027BAJA\u0027,cambio[x], modulo]);\n             }\n             else if(cambio[x][0] \u003d\u003d \u0027A\u0027){  // Si es (A)probado.\n              infoModulos.push([date, sec, cambio[4], \u0027APROBADO\u0027,cambio[x], modulo]);\n             }\n       }\n      }\n  }\n  if(infoPersonal.length \u003e 0 || infoModulos.length \u003e 0){\n     \n      if(infoPersonal.length \u003e 0){\n        var lastRi \u003d informeSheet.getLastRow() + + 1;\n         informeSheet.getRange(lastRi, 1, infoPersonal.length, infoPersonal[0].length).setValues(infoPersonal);\n      }\n      if(infoModulos.length \u003e 0){\n        var lastRm \u003d modulosSheet.getLastRow() + + 1;\n         modulosSheet.getRange(lastRm, 1, infoModulos.length, infoModulos[0].length).setValues(infoModulos);\n      }\n  }\n};\n\n//3 - APLICO LOS CAMBIOS EN \"ESTUDIANTES\" Y LIMPIO LA PLANILLA DE \"CAMBIOS\".\nfunction modEstudiantes(estC,rows,estValues,estSheet,camSheet,open){ \n  for(var i in estC){  // Itero sobre el array con Cambios. Los reparto en distintos informes (Virtual o Módulos)\n    var cambio \u003d estC[i];  // Fila de Cambios.\n      for(var j in estValues){\n        var dniE \u003d estValues[j];\n          if(dniE \u003d\u003d cambio[4]){  //Busco los índices de los DNI de estudiantes.\n            var row \u003d +j+6;\n              for(var k\u003d5;k\u003ccambio.length;k++){\n                if(cambio[k] !\u003d \u0027\u0027 \u0026\u0026 cambio[k] !\u003d \u0027BAJA\u0027){\n                  estSheet.getRange(row, k).setValue(cambio[k]);\n              } else if (cambio[k] \u003d\u003d \u0027BAJA\u0027){\n                estSheet.getRange(row, k).clearContent();\n                }\n              }\n          }\n      }\n      camSheet.getRange(rows[i], 5, 1, 47).clearContent();  // Borro los cambios plasmados en \u0027CAMBIOS\u0027.\n  }\n  //refrescar la validacion y el formato de la columna dni\n  var dniRng \u003d camSheet.getRange(\u0027E5:E55\u0027);\n  dniRng.setDataValidation(SpreadsheetApp.newDataValidation().setAllowInvalid(true).setHelpText(\u0027Introduzca un \"Cuil/DNI\" tal cual se encuentra en la solapa \"ESTUDIANTES\".\u0027).requireValueInRange(open.getSheetByName(\u0027Resumen\u0027).getRange(\u0027$D$9:$D$1005\u0027), true).build());\n  dniRng.setNumberFormat(\u0027@\u0027);\n  camSheet.getRange(\u0027G1\u0027).setValue(\u0027Los cambios se han plasmado en la planilla de \"ESTUDIANTES\" el día : \u0027+date);\n}\n\n//4 - SPREADSHEET DESTINO\n   //genera la planilla\nfunction generarPlanillaInformeDeCambios(){                                                \n  var folder \u003d dapp.getFolderById(\u00271GMsWZh075LPoyCi08Unz3fisqPUCuT5U\u0027);\n  var modelo \u003d dapp.getFileById(\u00271KMEAAz_5kq4bToGywXoNP8FxaVODBHS2KatS27zaTjw\u0027);\n  var copy \u003d modelo.makeCopy(\u0027Informe, Cambios \u0027+ date, folder);\n    sheet.getRange(\u0027D9\u0027).setValue(copy.getUrl());\n    openInforme \u003d sapp.openByUrl(copy.getUrl());\n    modulosSheet \u003d openInforme.getSheetByName(\u00271. Cambios módulos\u0027);\n    informeSheet \u003d openInforme.getSheetByName(\u00272. Cambios personales\u0027);\n    dapp.getFileById(copy.getId()).addViewer(\u0027modalidadadistancia.adultos@gmail.com\u0027);}\n    //referencia a la planilla genera\nfunction abrirPlanillaInformeDeCambios(){\n    openInforme \u003d sapp.openByUrl(sheet.getRange(\u0027D9\u0027).getValue());\n    modulosSheet \u003d openInforme.getSheetByName(\u00271. Cambios módulos\u0027);\n    informeSheet \u003d openInforme.getSheetByName(\u00272. Cambios personales\u0027);}\n //-------------------------------------------------------------------"},{"id":"1c669ecc-af41-478c-ade2-d275fb9c4f16","name":"moodleCSV","type":"server_js","source":"var headers \u003d [\u0027username\u0027,\u0027password\u0027,\u0027firstname\u0027,\u0027lastname\u0027,\u0027email\u0027,\u0027course1\u0027,\u0027role1\u0027,\u0027course2\u0027,\u0027role2\u0027,\u0027course3\u0027,\u0027role3\u0027];\nvar apellidoCol,nombreCol,dniCol,resolucionCol,soporteCol;\n  apellidoCol \u003d 1;\n  nombreCol \u003d 2;\n  dniCol \u003d 3;\n  mailCol \u003d 6  \n  resolucionCol \u003d 11;\n  soporteCol \u003d 12;\nvar parentMoodleCSV,folderMoodleCSV,sheetMoodleCSV;\n  \n//-------------------------------RUTINA PRINCIPAL-------------------------------\nfunction moodleCSV(file) {\ntry {\n //primero genereo un \"consolidado\" con todos los estudiantes con la estructura de los csv y los inicios correspondiente\n var fileId \u003d file.getId();\n var open \u003d SpreadsheetApp.openById(fileId);\n var planilla \u003d open.getSheetByName(\u0027Resumen\u0027).getRange(\u0027A9:AS\u0027).getValues();\n var sec \u003d open.getSheetByName(\u0027ESTUDIANTES\u0027).getRange(\u0027B15\u0027).getValue();\n var url \u003d file.getUrl();\n var array \u003d [];\n \n //iteraciones por planilla\n for (var n in planilla){\n  var rw \u003d planilla[n]; //entrada individual de estudiante\n  \n   if (rw[0] \u003d\u003d\u003d \u0027\u0027) {continue} //line en blanco, saltear\n  //resolucion,soporte\n   var resolucion \u003d rw[resolucionCol]; var res \u003d resolucion.toString().replace(/\\D/g,\u0027\u0027).substring(0,3);\n   var soporte \u003d rw[soporteCol].toString();\n  //conviero cuil/dni a dni y verifico\n   var cuilDni \u003d (rw[dniCol].toString()).replace(/\\D/g,\u0027\u0027);    //solo valores numericos;\n   var first \u003d cuilDni.substring(0,1); var med \u003d cuilDni.substring(2,3); var len \u003d cuilDni.length;\n    if (len \u003d\u003d\u003d 8 \u0026\u0026 (first \u003c\u003d 4 || first \u003d\u003d 9))  {var dni \u003d cuilDni}\n    else if (len \u003d\u003d\u003d 7 \u0026\u0026 first \u003e\u003d 4)             {var dni \u003d cuilDni}\n    else if (len \u003d\u003d\u003d 11 \u0026\u0026 (med \u003c\u003d 4 || med \u003d\u003d 9)){var dni \u003d cuilDni.substring(2,10)}\n    else if (len \u003d\u003d\u003d 10 \u0026\u0026 med \u003e\u003d 4)              {var dni \u003d cuilDni.substring(2,9)}\n    else                                          {var dni \u003d \u0027invalid\u0027}\n  //apellido,nombre,email,regexp(para validar el mail),rol\n   var apellido \u003d rw[apellidoCol];\n   var nombre \u003d rw[nombreCol];\n   var email \u003d rw[mailCol];\n   var emailValidation \u003d /\\S+@\\S+\\.\\S+/;\n   var rol \u003d \u0027student\u0027;\n   \n  //SI EL DNI ES VALIDO, EL MAIL ES VALIDO, LA RESOLUCION ES 106 Y EL SOPORTE ES VIRTUAL: LE ASIGNO LOS INICIOS\n   if (dni !\u003d\u003d \u0027invalid\u0027 \u0026\u0026 emailValidation.test(email) \u003d\u003d\u003d true \u0026\u0026 res \u003d\u003d 106 \u0026\u0026 soporte \u003d\u003d \u0027VIRTUAL\u0027) { var check \u003d true;\n    var mods \u003d []; for (var col\u003d13;col\u003c45;col++) { var mod \u003d rw[col];if (mod.substring(0,6) \u003d\u003d \u0027INICIO\u0027) {mods.push(campModules[col-13] + \u0027 - S\u0027 +sec)}}\n   array.push([check,url,sec,resolucion,soporte,cuilDni,dni,dni,apellido,nombre,email,mods[0],rol,mods[1],rol,mods[2],rol,mods.length]);\n   }\n  //SI ALGUNA DE LAS CONDICIONES NO SE CUMPLE AGREGO LA ENTRADA SIN MODULOS\n   else  { var check \u003d false;\n   array.push([check,url,sec,resolucion,soporte,cuilDni,dni,dni,apellido,nombre,email,\u0027\u0027,\u0027\u0027,\u0027\u0027,\u0027\u0027,\u0027\u0027,\u0027\u0027,\u0027\u0027]);\n   }\n } \n \n var lastRw \u003d sheetMoodleCSV.getLastRow();    \n//Si hay estudiantes nominalizados \n if (array.length \u003e 0){\n  sheetMoodleCSV.getRange(lastRw + 1, 1, array.length, array[0].length).setValues(array); //vuelco las entradas tratadas en el \"Listado - Moodle CSVs\"\n  //Convierto el array de estudiantes al formato csv\n      var toCsv \u003d [];\n       for (var r in array) { var arrayRw \u003d array[r];\n        if (arrayRw[0] \u003d\u003d\u003d true) {\n         var newRw \u003d arrayRw.slice(6,17);\n         toCsv.push(newRw);\n        }\n      } toCsv.unshift(headers);\n  \n   //Si hay estudiantes genero el csv y lo declaro\n   if (toCsv.length \u003e 1) {\n     toCsv \u003d multi_replace(toCsv); //saco los caracteres invalidos\n     var resource \u003d {\n      title: \u0027Moodle CSV - S\u0027+sec+\u0027 - \u0027+date,\n      mimeType: MimeType.CSV,\n      parents: [{id: \u00271dR7W-jf6jFwoJ0C1_A79Mhaw1Yw0yr5s\u0027}],\n     }; \n     var csvRows \u003d toCsv.join(\"\\n\");\n     var blob \u003d Utilities.newBlob(csvRows, \"text/csv\")\n     blob.setContentType(\u0027application/octet-stream\u0027);   \n     var created \u003d Drive.Files.insert(resource, blob); \n    var results_row \u003d [open.getName(),open.getUrl(),\u0027Done\u0027]; \n   } else {var results_row \u003d [open.getName(),open.getUrl(),\u0027No\u0027]} //Si no hay estudiantes que exportar lo declaro y no genero el csv\n }\n//Si NO hay estudiantes nominalizados  \n else { var results_row \u003d [open.getName(),open.getUrl(),\u0027No, planilla vacía.\u0027]}\n  return results_row \n   }\ncatch (e) {\n   var results_row \u003d [open.getName(),open.getUrl(),e.message];\n   PropertiesService.getUserProperties().setProperty(\u0027ERROR_COUNTER\u0027, parseInt(PropertiesService.getUserProperties().getProperty(\u0027ERROR_COUNTER\u0027)) + 1)\n   return results_row\n   }\n}\n\n//-------------------------------FUNCIONES AUXILIARES-------------------------------\n\n//1 - SPREADSHEET DESTINO\n   //genera la planilla\nfunction generarPlanillaMoodleCSV(){                                                \n  var folder \u003d dapp.getFolderById(\u00271t2M43wCVa1IAJf9uGxUuHoKQz1kCjMv6\u0027);\n  var modelo \u003d dapp.getFileById(\u00271dXacqT09sjiXtP00sAjbozrwpCg6sHoWQQnsNIR-zAM\u0027);\n  var copy \u003d modelo.makeCopy(\u0027Listado - Moodle CSVs \u0027+ date, folder);\n    sheet.getRange(\u0027D11\u0027).setValue(copy.getUrl());\n    openListado \u003d sapp.openByUrl(copy.getUrl());\n    sheetMoodleCSV \u003d openListado.getSheetByName(\u0027Listado moodle\u0027);}\n    //referencia a la planilla genera\nfunction abrirPlanillaMoodleCSV(){\n    openListado \u003d sapp.openByUrl(sheet.getRange(\u0027D11\u0027).getValue());\n    sheetMoodleCSV \u003d openListado.getSheetByName(\u0027Listado moodle\u0027);}\n\n//2 - REPLACE, para sacar los caracteres no validos en el csv\nfunction multi_replace(data){\n  var clean_data\u003d[];\n  var sust_array \u003d [\u0027Ñ\u0027,\u0027Á\u0027,\u0027É\u0027,\u0027Í\u0027,\u0027Ó\u0027,\u0027Ú\u0027,\u0027,\u0027,\u0027;\u0027]; //objetos a reemplazar\n  var remp_array \u003d [\u0027N\u0027,\u0027A\u0027,\u0027E\u0027,\u0027I\u0027,\u0027O\u0027,\u0027U\u0027,\u0027\u0027,\u0027\u0027];   //objetos de reemplazo\n  for (var i in data){\n   var rw\u003ddata[i];\n   var joined_data\u003drw.join(\u0027|\u0027).toUpperCase(); //convierto a string y paso a minusculas\n    for (var n in sust_array) {\n     var x \u003d new RegExp(sust_array[n], \u0027g\u0027);\n     var newStr \u003d joined_data.replace(x, remp_array[n]);\n     joined_data \u003d newStr;\n    }\n   var new_rw \u003d newStr.split(\u0027|\u0027);\n   clean_data.push(new_rw);\n   }\nreturn clean_data;\n}\n\n//3 - VACIAR CARPETA \"CSVs\"\nfunction vaciarCarpetaCSV(){\n var folderMoodleCSV \u003d dapp.getFolderById(\u00271dR7W-jf6jFwoJ0C1_A79Mhaw1Yw0yr5s\u0027);\n var allCSV \u003d folderMoodleCSV.getFiles();\n while (allCSV.hasNext()){\n  var CSV \u003d allCSV.next();\n  CSV.setTrashed(true);\n }}"},{"id":"24487c5b-2603-4e54-b2e0-11e79264b80c","name":"driveVsMoodle","type":"server_js","source":"var apellidoCol,nombreCol,dniCol,resolucionCol,soporteCol;\n  apellidoCol \u003d 1;\n  nombreCol \u003d 2;\n  dniCol \u003d 3;\n  mailCol \u003d 6  \n  resolucionCol \u003d 11;\n  soporteCol \u003d 12;  \nvar sheetReferenciaCruce;  \n  \n//--------------------------------------------------------------RUTINA PARA GENERAR \"REFERENCIA CRUCE\"--------------------------------------------------------------\nfunction generarReferenciaCruce(file) {\ntry {\n //genereo un \"consolidado\" con todos los estudiantes QUE IRÍAN AL MOODLE\n var fileId \u003d file.getId();\n var open \u003d SpreadsheetApp.openById(fileId);\n var planilla \u003d open.getSheetByName(\u0027Resumen\u0027).getRange(\u0027A9:AS\u0027).getValues();\n var sec \u003d open.getSheetByName(\u0027ESTUDIANTES\u0027).getRange(\u0027B15\u0027).getValue();\n var url \u003d file.getUrl();\n var array \u003d [];\n \n //iteraciones por planilla\n for (var n in planilla){\n  var rw \u003d planilla[n]; //entrada individual de estudiante\n  \n   if (rw[0] \u003d\u003d\u003d \u0027\u0027) {continue} //line en blanco, saltear\n  //resolucion,soporte\n   var resolucion \u003d rw[resolucionCol]; var res \u003d resolucion.toString().replace(/\\D/g,\u0027\u0027).substring(0,3);\n   var soporte \u003d rw[soporteCol].toString();\n  //conviero cuil/dni a dni y verifico\n   var cuilDni \u003d (rw[dniCol].toString()).replace(/\\D/g,\u0027\u0027);    //solo valores numericos;\n   var first \u003d cuilDni.substring(0,1); var med \u003d cuilDni.substring(2,3); var len \u003d cuilDni.length;\n    if (len \u003d\u003d\u003d 8 \u0026\u0026 (first \u003c\u003d 4 || first \u003d\u003d 9))  {var dni \u003d cuilDni}\n    else if (len \u003d\u003d\u003d 7 \u0026\u0026 first \u003e\u003d 4)             {var dni \u003d cuilDni}\n    else if (len \u003d\u003d\u003d 11 \u0026\u0026 (med \u003c\u003d 4 || med \u003d\u003d 9)){var dni \u003d cuilDni.substring(2,10)}\n    else if (len \u003d\u003d\u003d 10 \u0026\u0026 med \u003e\u003d 4)              {var dni \u003d cuilDni.substring(2,9)}\n    else                                          {var dni \u003d \u0027invalid\u0027}\n  //apellido,nombre,email,regexp(para validar el mail),rol\n   var apellido \u003d rw[apellidoCol];\n   var nombre \u003d rw[nombreCol];\n   var email \u003d rw[mailCol];\n   var emailValidation \u003d /\\S+@\\S+\\.\\S+/;\n   var rol \u003d \u0027student\u0027;\n   \n  //SI EL DNI ES VALIDO, LA RESOLUCION ES 106 Y EL SOPORTE ES VIRTUAL: LE ASIGNO LOS INICIOS                                                      (validacion de mail suspendida)\n   if (dni !\u003d\u003d \u0027invalid\u0027 \u0026\u0026 email !\u003d \u0027\u0027 \u0026\u0026 res \u003d\u003d 106 \u0026\u0026 soporte \u003d\u003d \u0027VIRTUAL\u0027) { var check \u003d true;                                          // \u0026\u0026 emailValidation.test(email) \u003d\u003d\u003d true\n    var mods \u003d []; for (var col\u003d13;col\u003c45;col++) { var mod \u003d rw[col];if (mod.substring(0,6) \u003d\u003d \u0027INICIO\u0027 \u0026\u0026 mod !\u003d \u0027INICIO MAR/20\u0027) {mods.push(campModules[col-13] + \u0027 - S\u0027 +sec)}}\n   array.push([url,sec,resolucion,soporte,cuilDni,dni,dni,apellido,nombre,email,mods[0],rol,mods[1],rol,mods[2],rol,mods.length]);\n   }\n } \n \n var lastRw \u003d sheetReferenciaCruce.getLastRow();    \n//Si hay estudiantes nominalizados \n if (array.length \u003e 0){\n  sheetReferenciaCruce.getRange(lastRw + 1, 1, array.length, array[0].length).setValues(array); //vuelco las entradas tratadas a la \"Referencia Cruce\"\n  var results_row \u003d [open.getName(),open.getUrl(),\u0027Done.\u0027]\n }\n//Si NO hay estudiantes nominalizados  \n else { var results_row \u003d [open.getName(),open.getUrl(),\u0027No, planilla sin estudiantes para moodle o vacía.\u0027]}\n  return results_row \n   }\ncatch (e) {\n   var results_row \u003d [open.getName(),open.getUrl(),e.message];\n   PropertiesService.getUserProperties().setProperty(\u0027ERROR_COUNTER\u0027, parseInt(PropertiesService.getUserProperties().getProperty(\u0027ERROR_COUNTER\u0027)) + 1)\n   return results_row\n   }\n}\n//-------------------------------FUNCION AUXILIAR-------------------------------\n//SPREADSHEET DESTINO\n   //genera la planilla\nfunction generarPlanillaReferenciaCruce(){                                                \n  var folder \u003d dapp.getFolderById(\u00271YWKEX3ZxH5fAcRrHXw2KtTpxCJwzQzc8\u0027);\n  var modelo \u003d dapp.getFileById(\u00271XAKeetrnJkZnnwEYwgQaqeHT3cDQwPcDkSG0gXaXJ5o\u0027);\n  var copy \u003d modelo.makeCopy(\u0027Referencia Cruce - Drive Vs Mdl \u0027+ date, folder);\n  dapp.getFileById(copy.getId()).addViewer(\u0027modalidadadistancia.adultos@gmail.com\u0027); //comparto vista con distancia\n    sheet.getRange(\u0027D13\u0027).setValue(copy.getUrl());\n    openListado \u003d sapp.openByUrl(copy.getUrl());\n    sheetReferenciaCruce \u003d openListado.getSheetByName(\u0027Listado moodle\u0027);}\n    //referencia a la planilla genera\nfunction abrirPlanillaReferenciaCruce(){\n    openListado \u003d sapp.openByUrl(sheet.getRange(\u0027D13\u0027).getValue());\n    sheetReferenciaCruce \u003d openListado.getSheetByName(\u0027Listado moodle\u0027);}\n    \n    \n//--------------------------------------------------------------CRUCE DE DRIVE VS MOODLE-------------------------------------------------------------- \n //una vez generada la planilla de referencia (contiene todos los estudiantes del drive que deberían ir al moodle y sus caracteristicas), cruzo esa info con la del \"reporte del moodle\" \nvar mdldniCol,mdlapellidoCol,mdlnombreCol,mdlsecCol,mdlmoduloCol,mdlrolCol,mdlmailCol,mdllinklCol,mdlacceso1Col,mdlacceso2Col;\n mdldniCol \u003d 6;\n mdlapellidoCol \u003d 7;\n mdlnombreCol \u003d 8;\n mdlsecCol \u003d 1;\n mdlmoduloCol \u003d 3;\n mdlrolCol \u003d 5;\n mdlmailCol \u003d 9;\n mdllinklCol \u003d 4;\n mdlacceso1Col \u003d 10;\n mdlacceso2Col \u003d 11;\n\nfunction  cruceDriveMdl(){\n abrirPlanillaReferenciaCruce();\n var reporteId \u003d PropertiesService.getUserProperties().getProperty(\u0027GLOBAL_AUX\u0027);//almacenado como variable global, del picker \n var reporte \u003d sapp.openById(reporteId).getDataRange().getValues(); \n var consolidado \u003d sheetReferenciaCruce.getDataRange().getValues();\n \n //Hago la copia del \"informe modelo\"\n var folder \u003d dapp.getFolderById(\u00271j2FY2dMp8kgcqj3TVWMtw0Tw6vu38Tct\u0027);\n var model \u003d dapp.getFileById(\u002716apAdgqr0TzDoQNaufcfNXGZpX6oHw4Wzsbash9sp9s\u0027);\n var copy \u003d model.makeCopy(\u0027Informe - Drive Vs Mdl \u0027+ date, folder)\n var copyUrl \u003d copy.getUrl();\n var openCopy \u003d sapp.openByUrl(copyUrl);\n dapp.getFileById(copy.getId()).addViewer(\u0027modalidadadistancia.adultos@gmail.com\u0027); //comparto vista con distancia\n \n //variables generales\n var arrayEst \u003d []; /**/ var arrayDoc \u003d []; /**/  var arrayAct \u003d [];\n var EstMods \u003d [];  /**/ var DocMods \u003d [];  /**/  var ActMods \u003d [];\n var EstMails \u003d []; var EstDni \u003d []; var EstOnlyMails \u003d []; //variables auxiliares \n \n//-----------------PROCESO-----------------\n //separo todo el reporte del mdl en 3 arrays: estudiantes, docentes y actores\n for (var i in reporte){\n  var reporteRw \u003d reporte[i];\n  //-estudiantes\n  if (reporteRw[mdlrolCol] \u003d\u003d \u0027ESTUDIANTE\u0027){\n   arrayEst.push([reporteRw[mdlrolCol],reporteRw[mdldniCol],reporteRw[mdlsecCol],reporteRw[mdlapellidoCol],reporteRw[mdlnombreCol],reporteRw[mdlmailCol],reporteRw[mdlmoduloCol],reporteRw[mdllinklCol],reporteRw[mdlacceso1Col],reporteRw[mdlacceso2Col]]);\n   var mdlModulo \u003d ((reporteRw[mdlmoduloCol].toString()).replace(\u0027(A)\u0027,\u0027\u0027).replace(\u0027(B)\u0027,\u0027\u0027)).trim();\n   EstMods.push(reporteRw[mdldniCol].toString().trim() + \u0027|\u0027 + mdlModulo + \u0027 - S\u0027 + reporteRw[mdlsecCol].toString().trim());  //join de dni y modulo del mdl\n   EstMails.push(reporteRw[mdldniCol].toString().trim() + \u0027|\u0027 + (reporteRw[mdlmailCol].toString().trim()).toLowerCase());     //join de dni y mail del mdl\n   EstDni.push(reporteRw[mdldniCol].toString().trim());                                                                       //unidimensional de dnis\n  } \n }\n  //-Del consolidado pre procesado del drive armo un listado de inicios y su información complementaria\n var DriveMods \u003d []; var DriveMails \u003d []; var DriveDni \u003d []; var DriveAux \u003d []; var DriveOnlyMails \u003d [];\n consolidado.shift(); //saco los encabezados\n for (var j in consolidado){ //itero sobre el consolidado ya procesado\n  var consolidadoRw \u003d consolidado[j];\n  if (consolidadoRw[5] !\u003d \u0027invalid\u0027) { //si el dni es invalido\n   var mail \u003d (consolidadoRw[9].toString().trim()).toLowerCase(); //minusc y trim de mail\n   if (consolidadoRw[10] !\u003d \u0027undefined\u0027) {DriveMods.push(consolidadoRw[5] + \u0027|\u0027 + consolidadoRw[10]) ;DriveAux.push(j)} //1er inicio\n   if (consolidadoRw[12] !\u003d \u0027undefined\u0027) {DriveMods.push(consolidadoRw[5] + \u0027|\u0027 + consolidadoRw[12]) ;DriveAux.push(j)} //2do inicio\n   if (consolidadoRw[14] !\u003d \u0027undefined\u0027) {DriveMods.push(consolidadoRw[5] + \u0027|\u0027 + consolidadoRw[14]) ;DriveAux.push(j)} //3er inicio\n   DriveMails.push(consolidadoRw[5] + \u0027|\u0027 + mail);   //join unidimensional de dni y mail\n   DriveDni.push(consolidadoRw[5].toString());       //unidimensional de dni\n   DriveOnlyMails.push(mail);                        //unidimensional de mails\n   }\n }\n//-Estudiantes Duplicados Drive\n var unique \u003d []; var dupPosAux \u003d []; var dupPos \u003d [];\n    //Primero armo un array con las posiciones de los dni duplicados, relativas : \"dupPos\"\n for (var k in DriveDni){var thisDni \u003d  DriveDni[k]; var ind \u003d unique.indexOf(thisDni); if (ind \u003d\u003d\u003d -1) {unique.push(thisDni); dupPosAux.push(k)} else {dupPos.push(k,dupPosAux[ind])}}\n var cleanUnique \u003d [];\n    //Limpio \"dupPos\" de sus entradas duplicadas, habia ingresado los duplicados de a pares, en caso de repetirse un dni mas de 2 veces duplicaría entrada\n for (var l in dupPos)  {var thisPos \u003d  dupPos[l]; var ind \u003d cleanUnique.indexOf(thisPos); if (ind \u003d\u003d\u003d -1) {cleanUnique.push(thisPos)}}\n//-Mails Duplicados Drive, analogo de dnis\n var uniqueM \u003d []; var dupPosAuxM \u003d []; var dupPosM \u003d [];\n    //Primero armo un array con las posiciones de los dni duplicados, relativas : \"dupPos\"\n for (var k in DriveOnlyMails){var thisMail \u003d  DriveOnlyMails[k]; var ind \u003d uniqueM.indexOf(thisMail); if (ind \u003d\u003d\u003d -1) {uniqueM.push(thisMail); dupPosAuxM.push(k)} else {dupPosM.push(k,dupPosAuxM[ind])}}\n var cleanUniqueM \u003d [];\n    //Limpio \"dupPos\" de sus entradas duplicadas, habia ingresado los duplicados de a pares, en caso de repetirse un dni mas de 2 veces duplicaría entrada\n for (var l in dupPosM)  {var thisPos \u003d  dupPosM[l]; var ind \u003d cleanUniqueM.indexOf(thisPos); if (ind \u003d\u003d\u003d -1) {cleanUniqueM.push(thisPos)}}\n    //cruzo las posiciones de los mails con los dni duplicados\n var uniqueMails \u003d [];  for (var ll in cleanUniqueM) { if (cleanUnique.indexOf(cleanUniqueM[ll]) \u003d\u003d -1){uniqueMails.push(cleanUniqueM[ll])}}   \n\n //------------RESULTADOS------------\n var Dup \u003d []; var DriveMiss \u003d []; var MoodleMiss \u003d []; var MailMiss \u003d []; var DniMiss \u003d []; var DupMail \u003d [];\n // -Modulos, Drive\n for (var m in DriveMods)  {if (EstMods.indexOf(DriveMods[m]) \u003d\u003d\u003d -1)  { //Si no encuentro la combinación DNI-MODULO: continua\n  var DModsSplit \u003d DriveMods[m].split(\u0027|\u0027); var ref \u003d DriveAux[m];\n  DModsSplit.unshift(consolidado[ref][1],consolidado[ref][7],consolidado[ref][8],consolidado[ref][9],consolidado[ref][4]); //agrego información complementaria\n  DriveMiss.push(DModsSplit)}}\n // -Modulos, Mdl \n for (var n in EstMods)    {if (DriveMods.indexOf(EstMods[n]) \u003d\u003d\u003d -1)  { //Si no encuentro la combinación DNI-MODULO: continua\n  var MdlModsSplit \u003d EstMods[n].split(\u0027|\u0027);\n  MdlModsSplit.unshift(arrayEst[n][2],arrayEst[n][3],arrayEst[n][4],arrayEst[n][5]); //agrego información complementaria\n  MdlModsSplit.push(arrayEst[n][7],arrayEst[n][8],arrayEst[n][9]);                   //agrego información complementaria\n  MoodleMiss.push(MdlModsSplit) }}\n // -Usuarios y Mails\n for (var o in DriveMails) {if (EstMails.indexOf(DriveMails[o]) \u003d\u003d\u003d -1){ //Si no encuentro la combinación DNI-MAIL prosigo\n  var DMailSplit \u003d DriveMails[o].split(\u0027|\u0027);\n  var ind \u003d EstDni.indexOf(DMailSplit[0]);                                                     //busco sólo el DNI\n  DMailSplit.unshift(consolidado[o][1],consolidado[o][7],consolidado[o][8],consolidado[o][4]); //agrego información complementaria\n  if (ind \u003d\u003d\u003d -1) {DniMiss.push(DMailSplit)}                                                   //Resultado: DNI no encontrado   \n  else {DMailSplit.push(arrayEst[parseInt(ind)][5]) ; MailMiss.push(DMailSplit)}}}             //Resultado: DNI encontrado, mail distinto\n // -DNIs Duplicados Drives\n for (var s in cleanUnique){var t \u003d cleanUnique[s]; Dup.push([consolidado[t][1],consolidado[t][4],consolidado[t][5],consolidado[t][7],consolidado[t][8],consolidado[t][9]])}\n // -MAILs Duplicados Drives\n for (var s in uniqueMails){var t \u003d uniqueMails[s]; DupMail.push([consolidado[t][1],consolidado[t][4],consolidado[t][5],consolidado[t][7],consolidado[t][8],consolidado[t][9]])}\n \n //Vuelco la info procesada en el reporte en caso de que corresponda\n if (Dup.length \u003e 0)       {openCopy.getSheetByName(\u00271. DNIs duplicados, Drive\u0027).getRange(3,1,Dup.length,Dup[0].length).setValues(Dup)}\n if (DupMail.length \u003e 0)   {openCopy.getSheetByName(\u00272. Mails duplicados, Drive\u0027).getRange(3,1,DupMail.length,DupMail[0].length).setValues(DupMail)}\n if (DniMiss.length \u003e 0)   {openCopy.getSheetByName(\u00273. Usuarios\u0027).getRange(3,1,DniMiss.length,DniMiss[0].length).setValues(DniMiss)}\n if (MailMiss.length \u003e 0)  {openCopy.getSheetByName(\u00274. Vs. Mails\u0027).getRange(3,1,MailMiss.length,MailMiss[0].length).setValues(MailMiss)}\n if (DriveMiss.length \u003e 0) {openCopy.getSheetByName(\u00275. Modulos, Drive\u0027).getRange(3,1,DriveMiss.length,DriveMiss[0].length).setValues(DriveMiss)}\n if (MoodleMiss.length \u003e 0){openCopy.getSheetByName(\u00276. Modulos, Mdl\u0027).getRange(3,1,MoodleMiss.length,MoodleMiss[0].length).setValues(MoodleMiss)}\n \n sheet.getRange(\u0027D14\u0027).setValue(copyUrl); //pongo el link del informe en la solapa \u0027Operaciones\u0027 \n PropertiesService.getUserProperties().deleteProperty(\u0027GLOBAL_AUX\u0027); //borro el id almacenado del reporte mdl \n } \n "},{"id":"bf895414-c113-49cf-85e2-42429323b4f9","name":"modules","type":"server_js","source":"var campModules \u003d [\u0027LENGUA I\u0027,\n\u0027LENGUA II\u0027,\n\u0027HISTORIA I\u0027,\n\u0027GEOGRAFIA I\u0027,\n\u0027DERECHOS HUMANOS Y CIUDADANIA\u0027,\n\u0027TIC I\u0027,\n\u0027FORMACION PARA EL TRABAJO\u0027,\n\u0027MATEMATICA I\u0027,\n\u0027MATEMATICA II\u0027,\n\u0027BIOLOGIA\u0027,\n\u0027PROMOCION DE LA SALUD\u0027,\n\u0027INGLES I\u0027,\n\u0027INGLES II\u0027,\n\u0027TIC II\u0027,\n\u0027FILOSOFIA\u0027,\n\u0027LENGUA III\u0027,\n\u0027LENGUA IV\u0027,\n\u0027HISTORIA II\u0027,\n\u0027GEOGRAFIA II\u0027,\n\u0027MATEMATICA III\u0027,\n\u0027MATEMATICA IV\u0027,\n\u0027FISICA\u0027,\n\u0027QUIMICA\u0027,\n\u0027ECONOMIA\u0027,\n\u0027CIENCIA POLITICA\u0027,\n\u0027DERECHO Y SOCIEDAD\u0027,\n\u0027ESTADO Y POLITICAS PUBLICAS\u0027,\n\u0027GEST. PART. DE POLITICAS PUBLICAS\u0027,\n\u0027SISTEMA DE INFORMACION\u0027,\n\u0027TEORIA DE LA ORG.\u0027,\n\u0027ADMIN. DE EMPRESAS\u0027,\n\u0027PLAN. Y GEST. DE EMPRENDIMIENTOS\u0027];"},{"id":"006881bf-3f5c-4230-a488-8fd36dbc8845","name":"Picker","type":"server_js","source":"function showPicker() { //uso este picker para eligir el reporte del moodle\n  var html \u003d HtmlService.createHtmlOutputFromFile(\u0027Picker.html\u0027)\n                        .setWidth(600)\n                        .setHeight(425)\n                        .setSandboxMode(HtmlService.SandboxMode.IFRAME);\n  SpreadsheetApp.getUi().showModalDialog(html, \u0027Select File\u0027);\n}\n\nfunction getOAuthToken() { return ScriptApp.getOAuthToken() }\nfunction saveVariable(id){ PropertiesService.getUserProperties().setProperty(\u0027GLOBAL_AUX\u0027, id) }"},{"id":"0ffcc4b4-a17e-4a22-9450-5bc1300ea046","name":"picker","type":"html","source":"\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n  \u003clink rel\u003d\"stylesheet\" href\u003d\"https://ssl.gstatic.com/docs/script/css/add-ons.css\"\u003e\n  \u003cscript type\u003d\"text/javascript\"\u003e\n    var DIALOG_DIMENSIONS \u003d { width: 600, height: 425};\n    var pickerApiLoaded \u003d false;\n     // Use the API Loader script to load google.picker, run for token \n    function onApiLoad() {\n        gapi.load(\u0027picker\u0027, {\u0027callback\u0027: function() { pickerApiLoaded \u003d true } });\n        google.script.run.withSuccessHandler(createPicker)\n                         .withFailureHandler(showError)\n                         .getOAuthToken();\n    }\n//-------------------Create Picker-------------------\n    function createPicker(token) {\n        if (pickerApiLoaded \u0026\u0026 token) { //if picker loaded and got token...\n            //create custom view\n            var docsView \u003d new google.picker.DocsView()\n                .setParent(\u00271Imh-CyZsuoaHRBtUSc2tC8cqq0oxoFBc\u0027)            //starting location: \"Reportes Moodle\"\n                .setMimeTypes(\u0027application/vnd.google-apps.spreadsheet\u0027);  //display type\n            //builder\n            var picker \u003d new google.picker.PickerBuilder()\n                .addView(docsView)\n                .enableFeature(google.picker.Feature.NAV_HIDDEN)\n                .hideTitleBar()\n                .setSize(DIALOG_DIMENSIONS.width - 2, DIALOG_DIMENSIONS.height - 2)\n                .setOAuthToken(token)\n                .setCallback(pickerCallback)\n                .setOrigin(\u0027https://docs.google.com\u0027)  \n                .build();      \n            //show\n            picker.setVisible(true);\n            //inner error\n        } else { showError(\u0027Unable to load the file picker.\u0027) }\n    }\n//-------------------Call Back-------------------\n    function pickerCallback(data) {\n        var action \u003d data[google.picker.Response.ACTION];\n        if (action \u003d\u003d google.picker.Action.PICKED) {             //if something got picked, get id and global store it\n            var doc \u003d data[google.picker.Response.DOCUMENTS][0];\n            var id \u003d doc[google.picker.Document.ID];\n//            document.getElementById(\u0027result\u0027).innerHTML \u003d id;\n            google.script.run.saveVariable(id);\n            google.script.host.close();\n        } else if (action \u003d\u003d google.picker.Action.CANCEL) {      //if CANCEL, close\n            google.script.host.close();\n        }\n    }\n\n    function showError(message) { document.getElementById(\u0027result\u0027).innerHTML \u003d \u0027Error: \u0027 + message }\n  \u003c/script\u003e\n\u003c/head\u003e\n\n\u003cbody\u003e\n    \u003cdiv\u003e\n        \u003cp id\u003d\u0027result\u0027\u003e\u003c/p\u003e\n    \u003c/div\u003e\n    \u003cscript type\u003d\"text/javascript\" src\u003d\"https://apis.google.com/js/api.js?onload\u003donApiLoad\"\u003e\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n\n\n\n\n"}]}